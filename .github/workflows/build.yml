name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install ImageMagick and RPM (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y imagemagick rpm

      - name: Install ImageMagick (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install imagemagick

      - name: Install ImageMagick (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install imagemagick --yes --force
          echo "ImageMagick installation completed"

      - name: Install Bash for Windows
        if: matrix.os == 'windows-latest'
        run: choco install git --yes

      - name: Build application
        run: npm run build

      - name: Build distributables (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run publish:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build distributables (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run publish:mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build distributables (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run publish:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Nevu Desktop ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
