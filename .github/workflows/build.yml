name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install ImageMagick and RPM (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y imagemagick rpm

      - name: Install ImageMagick (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install imagemagick

      - name: Install ImageMagick (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install imagemagick --yes
          refreshenv

      - name: Install Bash for Windows
        if: matrix.os == 'windows-latest'
        run: choco install git --yes

      - name: Build application
        run: npm run build

      - name: Build distributables (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run dist:win

      - name: Build distributables (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run dist:mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Build distributables (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run dist:linux

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: |
            dist/*.exe
            dist/*.msi
            dist/latest.yml

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: |
            dist/*.dmg
            dist/*.zip
            dist/latest-mac.yml

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/latest-linux.yml

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: find . -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.rpm" -o -name "*.zip"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            windows-build/*.exe
            macos-build/*.dmg
            macos-build/*.zip
            linux-build/*.AppImage
            linux-build/*.deb
            linux-build/*.rpm
          name: Nevu Desktop ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
